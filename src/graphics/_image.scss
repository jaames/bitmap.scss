@use '../util/bytearray';

@function create($width: 1, $height: 1, $num-colors: 256) {
  @return (
    width: $width,
    height: $height,
    colors: $num-colors,
    palette: bytearray.alloc($num-colors * 4), // colors in BGRA order
    pixels: bytearray.alloc($width * $height) // 8 bits per pixel for paletted color
  );
}

@function set-palette-color($image, $index, $color) {
  $palette: map-get($image, palette);
  $ptr: $index * 4;
  $palette: set-nth($palette, $ptr + 1, blue($color));
  $palette: set-nth($palette, $ptr + 2, green($color));
  $palette: set-nth($palette, $ptr + 3, red($color));
  $palette: set-nth($palette, $ptr + 4, alpha($color));
  @return map-merge($image, (palette: $palette));
}

@function set-pixel($image, $x, $y, $color-index) {
  $pixels: map-get($image, pixels);
  $width: map-get($image, width);
  $height: map-get($image, height);
  // don't draw pixels out of bounds!
  @if $x < 0 or $x >= $width {
    @return $image;
  }
  @if $y < 0 or $y >= $height {
    @return $image;
  }
  $ptr: $y * $width + $x;
  $pixels: set-nth($pixels, $ptr + 1, $color-index);
  @return map-merge($image, (pixels: $pixels));
}